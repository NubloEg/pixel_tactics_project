name: CI/CD Fullstack

on:
  push:
    branches:
      - main
      - feature/*

jobs:
  frontend:
    name: Build and Deploy Frontend (Next.js)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js for frontend
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Lint frontend
        working-directory: frontend
        run: npm run lint

      - name: Test frontend
        working-directory: frontend
        run: npm test -- --passWithNoTests

      - name: Build frontend
        working-directory: frontend
        run: npm run build
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}

      - name: Deploy frontend to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_FRONTEND_PROJECT_ID }}
          vercel-args: "--prod"
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}

  backend:
    name: Build and Deploy Backend (Node.js/NestJS)
    runs-on: ubuntu-latest
    needs: frontend

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js for backend
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install backend dependencies
        working-directory: backend
        run: npm ci

      - name: Lint backend
        working-directory: backend
        run: npm run lint

      - name: Test backend
        working-directory: backend
        run: npm test -- --passWithNoTests

      - name: Build backend
        working-directory: backend
        run: npm run build

      # Деплой на Render (пример)
      - name: Deploy backend to Render
        env:
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          curl -X POST https://api.render.com/deploy/srv-${RENDER_SERVICE_ID} \
            -H "Authorization: Bearer ${RENDER_API_KEY}" \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            -d '{}'
